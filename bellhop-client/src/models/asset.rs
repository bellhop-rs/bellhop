/* 
 * Bellhop
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Asset {
  #[serde(rename = "id")]
  id: i32,
  #[serde(rename = "type_id")]
  type_id: i32,
  #[serde(rename = "name")]
  name: String,
  #[serde(rename = "lease_id")]
  lease_id: i32
}

impl Asset {
  pub fn new(id: i32, type_id: i32, name: String, lease_id: i32) -> Asset {
    Asset {
      id: id,
      type_id: type_id,
      name: name,
      lease_id: lease_id
    }
  }

  pub fn set_id(&mut self, id: i32) {
    self.id = id;
  }

  pub fn with_id(mut self, id: i32) -> Asset {
    self.id = id;
    self
  }

  pub fn id(&self) -> &i32 {
    &self.id
  }


  pub fn set_type_id(&mut self, type_id: i32) {
    self.type_id = type_id;
  }

  pub fn with_type_id(mut self, type_id: i32) -> Asset {
    self.type_id = type_id;
    self
  }

  pub fn type_id(&self) -> &i32 {
    &self.type_id
  }


  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> Asset {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_lease_id(&mut self, lease_id: i32) {
    self.lease_id = lease_id;
  }

  pub fn with_lease_id(mut self, lease_id: i32) -> Asset {
    self.lease_id = lease_id;
    self
  }

  pub fn lease_id(&self) -> &i32 {
    &self.lease_id
  }


}



