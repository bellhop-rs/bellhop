/* 
 * Bellhop
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateTagType {
  #[serde(rename = "name")]
  name: String,
  #[serde(rename = "detail_only")]
  detail_only: bool,
  #[serde(rename = "rightness")]
  rightness: i32
}

impl CreateTagType {
  pub fn new(name: String, detail_only: bool, rightness: i32) -> CreateTagType {
    CreateTagType {
      name: name,
      detail_only: detail_only,
      rightness: rightness
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> CreateTagType {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_detail_only(&mut self, detail_only: bool) {
    self.detail_only = detail_only;
  }

  pub fn with_detail_only(mut self, detail_only: bool) -> CreateTagType {
    self.detail_only = detail_only;
    self
  }

  pub fn detail_only(&self) -> &bool {
    &self.detail_only
  }


  pub fn set_rightness(&mut self, rightness: i32) {
    self.rightness = rightness;
  }

  pub fn with_rightness(mut self, rightness: i32) -> CreateTagType {
    self.rightness = rightness;
    self
  }

  pub fn rightness(&self) -> &i32 {
    &self.rightness
  }


}



